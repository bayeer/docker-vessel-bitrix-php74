version: '3'
services:
  app:
    platform: linux/amd64
    build:
      context: ./docker/app
      dockerfile: Dockerfile
    image: gb5rb/app
    ports:
     - "${APP_PORT}:80"
    environment:
      CONTAINER_ENV: "${APP_ENV}"
      XDEBUG_HOST: "${XDEBUG_HOST}"
      WWWUSER: "${WWWUSER}"
    volumes:
     - .:/var/www/html
    networks:
     - vessel
  node:
    platform: linux/amd64
    build:
      context: ./docker/node
      dockerfile: Dockerfile
      args:
        uid: "${WWWUSER}"
    image: gb5rb/node
    user: node
    volumes:
     - .:/var/www/html
    networks:
     - vessel
  mysql:
    platform: linux/amd64
    image: mysql:5.7
    ports:
     - "${DB_PORT}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: "${DB_PASSWORD}"
      MYSQL_DATABASE: "${DB_DATABASE}"
      MYSQL_USER: "${DB_USERNAME}"
      MYSQL_PASSWORD: "${DB_PASSWORD}"
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
    volumes:
     - vesselmysql:/var/lib/mysql
     # - ./docker/mysql/conf.d:/etc/mysql/conf.d
     # - ./docker/mysql/logs:/var/log/mysql
    networks:
     - vessel
  redis:
    # platform: linux/amd64
    image: redis:alpine
    volumes:
     - vesselredis:/data
    networks:
     - vessel
networks:
  vessel:
    driver: "bridge"
volumes:
  vesselmysql:
    driver: "local"
  vesselredis:
    driver: "local"
